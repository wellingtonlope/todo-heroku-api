name: Build

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  Test:
    name: Unit Test
    strategy:
      matrix:
        go-version: [1.18.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint ./...

      - name: Run Test
        run: |
          go test -v -covermode=count -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out -o=coverage.out

  Deploy:
    name: Deploy application
    needs: [Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Stage branch
        if: "contains(github.ref_name, 'main')"
        run: echo "HEROKU_ENV=stage" >> $GITHUB_ENV
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a todo-api-${{ env.HEROKU_ENV }} web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a todo-api-${{ env.HEROKU_ENV }} web